package com.example.hiddencitieshelpdialer;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.media.AudioManager;
import android.media.MediaPlayer;
import android.media.ToneGenerator;
import android.os.Bundle;

import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;

public class HiddenCitiesHelpDialer extends Activity implements
		View.OnTouchListener, MediaPlayer.OnPreparedListener {

	static final ToneGenerator _toneGenerator = new ToneGenerator(
			AudioManager.STREAM_VOICE_CALL, 100);
	private List<Button> buttonList;

	private static final int[] BUTTON_IDS = { R.id.Button1, R.id.Button2,
			R.id.Button3, R.id.Button4, R.id.Button5, R.id.Button6,
			R.id.ButtonMinus, R.id.Button7, R.id.Button8, R.id.Button9,
			R.id.ButtonPlus, R.id.Button0, R.id.ButtonDoubleZero,
			R.id.ButtonEquals, R.id.ButtonDivision

	};

	static int[] TONE_IDS = { ToneGenerator.TONE_DTMF_1,
			ToneGenerator.TONE_DTMF_2, ToneGenerator.TONE_DTMF_3,
			ToneGenerator.TONE_DTMF_4, ToneGenerator.TONE_DTMF_5,
			ToneGenerator.TONE_DTMF_6, ToneGenerator.TONE_DTMF_7,
			ToneGenerator.TONE_DTMF_8, ToneGenerator.TONE_DTMF_9,
			ToneGenerator.TONE_DTMF_P, ToneGenerator.TONE_DTMF_0,
			ToneGenerator.TONE_DTMF_S,

	};

	static String[] mediaPaths = {
			"storage/sdcard0/hiddenCities/audio/helpDesk/Main Menu.wav",
			"storage/sdcard0/hiddenCities/audio/helpDesk/call in a q.wav",
			

	};
	int menuLevel;
	int tempStore;
	Button mButton;
	MediaPlayer mMediaPlayer = null;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_hidden_cities_help_dialer);
		menuLevel = 0;
		buttonList = new ArrayList<Button>();
		for (int id : BUTTON_IDS) {
			Button mButton = (Button) findViewById(id);
			mButton.setOnTouchListener(this); // maybe
			buttonList.add(mButton);
		}

		try {
			loadMedia(mediaPaths[0]);
		} catch (IllegalArgumentException | SecurityException
				| IllegalStateException | IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public boolean onTouch(View v, MotionEvent event) {
		System.out.println(v.getId());

		if (event.getAction() == MotionEvent.ACTION_DOWN) {
			for (int j = 0; j < 12; j++) {
				if (v.getId() == BUTTON_IDS[j]) {
					tempStore = j;
				}
			}
			_toneGenerator.startTone(TONE_IDS[tempStore]);
			System.out.println(BUTTON_IDS[tempStore]);
		}
		if (event.getAction() == MotionEvent.ACTION_UP) {
			_toneGenerator.stopTone();
			switch (menuLevel) {
			case 1:
				switch (v.getId()) {
				case 1:
					try {
						loadMedia(mediaPaths[1]);
					} catch (IllegalArgumentException | SecurityException
							| IllegalStateException | IOException e) {
						e.printStackTrace();
					}

				}
				
				break;
			}
		}

		return false;
	}

	public void loadMedia(String path) throws IllegalArgumentException,
			SecurityException, IllegalStateException, IOException {
		if (mMediaPlayer.isPlaying()) {
			mMediaPlayer.stop();
			mMediaPlayer.release();
		}

		mMediaPlayer.setAudioStreamType(AudioManager.STREAM_VOICE_CALL);
		mMediaPlayer.setDataSource(path);

		mMediaPlayer.setOnPreparedListener(this);
		mMediaPlayer.prepareAsync();
	}

	@Override
	public void onPrepared(MediaPlayer mp) {
		mp.start();
	}
}
