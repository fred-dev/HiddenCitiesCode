package processing.test.AudioTest2;

import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;
import android.app.Activity;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;

import android.os.Environment;

import apwidgets.*;
import ketai.*;

public class AudioTest2 extends PApplet implements SensorEventListener
{



	String[]			mPaths;
	AudioPlayManager[]	mPlayManagers;
	private float currentDegree = 0f;
	private float tempDegree = 0f;

    // device sensor manager
    private SensorManager mSensorManager;
    PImage turnSignal;
	public void setup()
	{
		turnSignal=loadImage("storage/sdcard0/hiddenCities/images/compasAudioRotate.png");
		orientation(PORTRAIT);
		imageMode(CENTER);

		mPaths = new String[2];
		
		mPaths[0] = "storage/sdcard0/hiddenCities/audio/compasAudio1.wav";
		mPaths[1]= "storage/sdcard0/hiddenCities/audio/compasAudio2.wav";


		mPlayManagers = new AudioPlayManager[mPaths.length];
		for (int i = 0; i < mPlayManagers.length; i++) {
			println("making manager number " + i);
			mPlayManagers[i] = new AudioPlayManager(mPaths[i], 64); // buffersize = 64kb
			mPlayManagers[i].setIsLooping(false);
			mPlayManagers[i].play();

		}


		 mSensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);

        mSensorManager.registerListener(this, mSensorManager.getDefaultSensor(Sensor.TYPE_ORIENTATION),SensorManager.SENSOR_DELAY_GAME);

	}
	public void onSensorChanged(SensorEvent event) {

        // get the angle around the z-axis rotated
        float degree = Math.round(event.values[0]);

        currentDegree = degree;
        println(Float.toString(currentDegree));

    }
	public void draw()
	{
		
		background(0);
		
		if (currentDegree>180) {
			tempDegree = currentDegree - 180.0f;

			mPlayManagers[0].setVolume(map((float) tempDegree, 0.0f, 180.0f,0.0f, 1.0f));
			mPlayManagers[1].setVolume(map((float) 180-tempDegree, 0.0f, 180.0f,0.0f, 1.0f));
		      
		    }
		    if (currentDegree<180) {
		      
		    	mPlayManagers[0].setVolume(map((float) 180 - currentDegree, 0.0f, 180.0f,00.0f, 1.0f));
				mPlayManagers[1].setVolume(map((float) currentDegree, 0.0f, 180.0f,0.0f, 1.0f));
		      
		    }
		
		
		    image(turnSignal,540, 960);
		

	}

	

	public void mousePressed()
	{

	}

	public void keyPressed()
	{

	}

	public int sketchWidth()
	{
		return displayWidth;
	}

	public int sketchHeight()
	{
		return displayHeight;
	}
	@Override
	public void onAccuracyChanged(Sensor sensor, int accuracy) {
		// TODO Auto-generated method stub
		
	}
}
