package com.example.hiddencitieslogin;


import java.io.File;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.Document;
import org.w3c.dom.Node;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.os.Bundle;
import android.os.Environment;
import android.view.Menu;
import android.view.View;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

@SuppressLint("NewApi") public class HiddenCitiesLogin extends Activity {

   private EditText  username=null;
   private EditText  email=null;
   private TextView  emailTextView=null;
   private TextView  userNameTextView=null;
   private TextView  welcomeTextView=null;
 
   private Button login;
   int counter = 3;
   
   @Override
   protected void onCreate(Bundle savedInstanceState) {
      super.onCreate(savedInstanceState);
      setContentView(R.layout.activity_hidden_cities_login);
      getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
  			WindowManager.LayoutParams.FLAG_FULLSCREEN);
  	 
  	 if (getActionBar().isShowing()) getActionBar().hide();
  	 
      username = (EditText)findViewById(R.id.editText1);
      email = (EditText)findViewById(R.id.editText2);
      login = (Button)findViewById(R.id.button1);
      
      welcomeTextView =(TextView)findViewById(R.id.welcomeText);
      userNameTextView = (TextView)findViewById(R.id.usernameText);
      emailTextView= (TextView)findViewById(R.id.emailText);
//      welcomeTextView.setText("Welcome");
//      userNameTextView.setText("LikeThis");
//      emailTextView.setText("or this");
   }

   public void login(View view){
	   String mEmail;
	   mEmail = email.getText().toString();
	   
	   if(username.getText().toString().equals("")){
		   Toast.makeText(getApplicationContext(), "oops, you forgot your name", 
				      Toast.LENGTH_SHORT).show();
	   }
	   
	   if(email.getText().toString().equals("")){
		   Toast.makeText(getApplicationContext(), "oops, you forgot your email", 
				      Toast.LENGTH_SHORT).show();
	   }
	   if(isEmailValid(mEmail)==false){
		   Toast.makeText(getApplicationContext(), "Sorry, that email is invalid", 
				      Toast.LENGTH_SHORT).show();
	   }
	 
   else{
	   SaveToXml(username.getText().toString(), "username", 0);
	   SaveToXml(email.getText().toString(), "useremail", 0);
      Toast.makeText(getApplicationContext(), "Logging in, I'll just be a moment",
      Toast.LENGTH_SHORT).show();
      
   }
}
   @Override
   protected void onResume() {
 
       super.onResume();
 
   }

   @Override
   protected void onPause() {
       super.onPause();
   }
   
   public static boolean isEmailValid(String email) {
	    boolean isValid = false;

	    String expression = "^[\\w\\.-]+@([\\w\\-]+\\.)+[A-Z]{2,4}$";
	    CharSequence inputStr = email;

	    Pattern pattern = Pattern.compile(expression, Pattern.CASE_INSENSITIVE);
	    Matcher matcher = pattern.matcher(inputStr);
	    if (matcher.matches()) {
	        isValid = true;
	       
	    }
	    return isValid;
	}
   private void SaveToXml(String value, String tagName, int Item) {

	    String destFile = Environment.getExternalStorageDirectory().toString()+"/hiddenCities/hiddenCitiesSettings.xml";
	    try {

            File fXmlFile = new File(destFile);
        	DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
        	DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
        	Document doc = dBuilder.parse(fXmlFile);

	        Node path = doc.getElementsByTagName(tagName).item(Item);
	        path.setTextContent(value);

	        TransformerFactory transFactory = TransformerFactory.newInstance();
	        Transformer trans = transFactory.newTransformer();
	        trans.setOutputProperty(OutputKeys.INDENT, "yes");
	        DOMSource source = new DOMSource(doc);
	        StreamResult result = new StreamResult(new File(destFile));
	        trans.transform(source, result);

	    } catch (Exception e) {
	        e.printStackTrace();
	    }
   }
	    
   @Override
   public boolean onCreateOptionsMenu(Menu menu) {
      // Inflate the menu; this adds items to the action bar if it is present.
      getMenuInflater().inflate(R.menu.hidden_cities_login, menu);
      return true;
   }

}
