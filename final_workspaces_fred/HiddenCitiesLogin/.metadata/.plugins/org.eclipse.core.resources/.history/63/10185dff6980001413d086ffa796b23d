package com.example.hiddencitieslogin;


import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.StringWriter;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.xmlpull.v1.XmlSerializer;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.os.Environment;
import android.os.Message;
import android.util.Xml;
import android.view.Menu;
import android.view.View;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

@SuppressLint("NewApi") public class HiddenCitiesLogin extends Activity {

   private EditText  username=null;
   private EditText  email=null;
 
   private Button login;
   int counter = 3;
   
   @Override
   protected void onCreate(Bundle savedInstanceState) {
      super.onCreate(savedInstanceState);
      setContentView(R.layout.activity_hidden_cities_login);
      getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
  			WindowManager.LayoutParams.FLAG_FULLSCREEN);
  	 
  	 if (getActionBar().isShowing()) getActionBar().hide();
  	 
      username = (EditText)findViewById(R.id.editText1);
      email = (EditText)findViewById(R.id.editText2);
      login = (Button)findViewById(R.id.button1);
   }

   public void login(View view){
	   String mEmail;
	   mEmail = email.getText().toString();
	   
	   if(username.getText().toString().equals("")){
		   Toast.makeText(getApplicationContext(), "oops, you forgot your name", 
				      Toast.LENGTH_SHORT).show();
	   }
	   
	   if(email.getText().toString().equals("")){
		   Toast.makeText(getApplicationContext(), "oops, you forgot your email", 
				      Toast.LENGTH_SHORT).show();
	   }
	   if(isEmailValid(mEmail)==false){
		   Toast.makeText(getApplicationContext(), "Sorry, that email is invalid", 
				      Toast.LENGTH_SHORT).show();
	   }
	 
   else{
	   writeXml( "hiddenCitiesSettings.xml", email.getText().toString(), username.getText().toString());
      Toast.makeText(getApplicationContext(), "Logging in, I'll just be a moment",
      Toast.LENGTH_SHORT).show();
      
   }
}
   @Override
   protected void onResume() {
 
       super.onResume();
 
   }

   @Override
   protected void onPause() {
       super.onPause();
   }
   
   public static boolean isEmailValid(String email) {
	    boolean isValid = false;

	    String expression = "^[\\w\\.-]+@([\\w\\-]+\\.)+[A-Z]{2,4}$";
	    CharSequence inputStr = email;

	    Pattern pattern = Pattern.compile(expression, Pattern.CASE_INSENSITIVE);
	    Matcher matcher = pattern.matcher(inputStr);
	    if (matcher.matches()) {
	        isValid = true;
	       
	    }
	    return isValid;
	}
   private void writeXml( String xmlFile, String userEmail, String userName){
	 
	   try {
		   
		   File root = Environment.getExternalStorageDirectory();
		   File dir = new File (root.getAbsolutePath() + "/hiddenCities/");
		   File file = new File(dir, xmlFile);

		
	       FileOutputStream fos = new  FileOutputStream(file);
	       
	       FileOutputStream fileos= getApplicationContext().openFileOutput(file.getAbsolutePath(), Context.MODE_PRIVATE);
	       XmlSerializer xmlSerializer = Xml.newSerializer();              
	       StringWriter writer = new StringWriter();
	       try {
			xmlSerializer.setOutput(writer);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	       xmlSerializer.startDocument("UTF-8", true);
	       xmlSerializer.startTag(null, "settings");
	       xmlSerializer.startTag(null, "users");
	       xmlSerializer.startTag(null, "user");
	       xmlSerializer.startTag(null,"username");
	       xmlSerializer.text(userName);
	       xmlSerializer.endTag(null, "username");
	       xmlSerializer.startTag(null,"useremail");
	       xmlSerializer.text(userEmail);
	       xmlSerializer.endTag(null, "useremail");
	       xmlSerializer.endTag(null, "user");
	       xmlSerializer.endTag(null, "users");
	       xmlSerializer.endDocument();
	       xmlSerializer.flush();
	       String dataWrite = writer.toString();
	       fileos.write(dataWrite.getBytes());
	       fileos.close();
	   }
	   catch (FileNotFoundException e) {
	       // TODO Auto-generated catch block
	       e.printStackTrace();
	   }
	   catch (IllegalArgumentException e) {
	       // TODO Auto-generated catch block
	       e.printStackTrace();
	   }
	   catch (IllegalStateException e) {
	       // TODO Auto-generated catch block
	       e.printStackTrace();
	   } catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	} 
	}
   @Override
   public boolean onCreateOptionsMenu(Menu menu) {
      // Inflate the menu; this adds items to the action bar if it is present.
      getMenuInflater().inflate(R.menu.hidden_cities_login, menu);
      return true;
   }

}
